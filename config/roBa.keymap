#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 3
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        vscode_reindent {
            bindings = <&kp LS(LA(F))>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp ESC>;
            key-positions = <0 10>;
        };

        caps_lock {
            bindings = <&kp CAPS>;
            key-positions = <3 4>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <9 8>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        taskview_macro: taskview_macro {
            compatible = "zmk,behavior-macro";
            label = "Taskview";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LGUI>;
        };

        win_screenshot: win_screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp LEFT_SHIFT &kp S>;
            label = "WIN_SCREENSHOT";
        };

        date_format: date_format {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(Y) &kp LS(Y) &kp LS(Y) &kp LS(Y) &kp MINUS &kp LS(M) &kp LS(M) &kp MINUS &kp LS(D) &kp LS(D) &kp SPACE &kp LS(H) &kp LS(H) &kp COLON &kp M &kp M &kp COLON &kp S &kp S>;
            label = "DATE_FORMAT";
        };

        scroll_up_down: scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ALPHABET {
            bindings = <
&kp Q             &kp W         &kp E           &kp R           &kp T                                                 &kp Y        &kp U  &kp I      &kp O      &kp P
&kp A             &kp S         &kp D           &kp F           &kp G      &taskview_macro             &kp COMMA      &kp H        &kp J  &kp K      &kp L      &kp MINUS
&kp Z             &kp X         &kp C           &kp V           &kp B      &kp EXCLAMATION             &kp PERIOD     &kp N        &kp M  &mkp LCLK  &mkp RCLK  &kp TILDE
&kp LEFT_CONTROL  &kp LEFT_ALT  &lt 3 LEFT_GUI  &kp LEFT_SHIFT  &lt 2 TAB  &lt_to_layer_0 1 SPACE      &kp BACKSPACE  &lt 4 ENTER                               &kp ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MODIFIER {
            bindings = <
&kp TILDE        &kp EXCLAMATION    &kp AT_SIGN       &kp HASH               &kp DOLLAR                                   &kp PERCENT    &kp LCTRL  &kp AMPERSAND      &kp ASTERISK  &kp PIPE
&kp LEFT_BRACE   &kp LEFT_BRACKET   &kp LESS_THAN     &kp LEFT_PARENTHESIS   &kp COLON      &trans            &kp PERIOD  &kp BACKSLASH  &kp SQT    &kp DOUBLE_QUOTES  &kp GRAVE     &kp MINUS
&kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp QUESTION      &kp COMMA   &kp SLASH      &kp TILDE  &kp PLUS           &kp EQUAL     &kp UNDERSCORE
&trans           &trans             &trans            &trans                 &trans         &trans            &trans      &trans                                                     &win_screenshot
            >;
        };

        NUMERIC {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                      &kp NUMBER_6  &kp N7     &kp N8        &kp N9     &kp N0
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &kp PLUS      &kp MINUS  &kp ASTERISK  &kp SLASH  &kp EQUAL
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &kp PERCENT   &kp LT     &kp GT        &kp COMMA  &kp PERIOD
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &trans                                            &trans
            >;
        };

        CONTROL {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5                       &kp PAGE_UP  &kp PAGE_DOWN  &kp HOME  &kp END       &kp ESCAPE
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans      &trans  &trans       &trans         &none     &kp UP_ARROW  &none
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &trans      &trans  &trans       &trans         &kp LEFT  &kp DOWN      &kp RIGHT
&trans   &trans   &trans   &trans   &trans   &trans      &trans  &trans                                              &kp LC(LS(ESCAPE))
            >;
        };

        BLUETOOTH {
            bindings = <
&to_layer_0 NUMBER_1  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans                &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans                &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans                &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
