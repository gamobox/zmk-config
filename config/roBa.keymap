#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 3
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp ESC>;
            key-positions = <0 10>;
        };

        caps_lock {
            bindings = <&kp CAPS>;
            key-positions = <9 8>;
        };

        left_gui {
            bindings = <&kp LEFT_WIN>;
            key-positions = <40 41>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        taskview_macro: taskview_macro {
            compatible = "zmk,behavior-macro";
            label = "Taskview";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LGUI>;
        };

        eq: eqeqeq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL>;
            label = "EQEQEQ";
        };

        not_eq: not_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL>;
            label = "NOT_EQ";
        };

        scroll_up_down: scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ALPHABET {
            bindings = <
&kp Q           &kp W             &kp E         &kp R                        &kp T                                                   &kp Y        &kp U  &kp I      &kp O      &kp P
&kp A           &kp S             &kp D         &kp F                        &kp G        &mkp MB1                    &trans         &kp H        &kp J  &kp K      &kp L      &kp MINUS
&kp Z           &kp X             &kp C         &kp V                        &kp B        &taskview_macro             &trans         &kp N        &kp M  &mkp LCLK  &mkp RCLK  &kp SLASH
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &lt_to_layer_0 1 INT_HENKAN  &lt 2 SPACE  &lt_to_layer_0 3 SPACE      &kp BACKSPACE  &lt 1 ENTER                               &kp ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MODIFIER {
            bindings = <
&kp GRAVE       &kp AT_SIGN     &kp HASH         &kp DOLLAR    &kp EXCLAMATION                                &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS             &kp LS(EQUAL)  &kp COLON
&kp PERCENT     &kp CARET       &kp AMPERSAND    &kp ASTERISK  &kp QUESTION     &trans      &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp LESS_THAN          &kp GREATER_THAN      &kp LS(SQT)    &kp SEMICOLON
&trans          &kp UP_ARROW    &trans           &trans        &trans           &trans      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SLASH              &kp NON_US_BACKSLASH  &kp PIPE       &kp SQT
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans        &trans           &trans      &trans            &trans                                                                            &trans
            >;
        };

        NUMERIC {
            bindings = <
&kp NUMBER_1                &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                      &kp NUMBER_6  &kp N7     &kp N8        &kp N9     &kp N0
&trans                      &trans        &trans        &trans        &trans  &trans      &trans  &kp PLUS      &kp MINUS  &kp ASTERISK  &kp SLASH  &kp EQUAL
&mt LEFT_SHIFT KP_NUMBER_0  &trans        &trans        &trans        &trans  &trans      &trans  &kp PERCENT   &kp LT     &kp GT        &kp COMMA  &kp PERIOD
&trans                      &trans        &trans        &trans        &trans  &trans      &trans  &trans                                            &trans
            >;
        };

        MACRO {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &kp HOME  &kp PAGE_UP
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &kp END   &kp PAGE_DOWN
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans    &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                            &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&to_layer_0 NUMBER_1  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans                &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans                &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans                &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
